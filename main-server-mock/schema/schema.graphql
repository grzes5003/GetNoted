scalar Date

type Query {
    hello: String
    resolved: [Category]
    categories: [Category]
    people: [Person]
}

type Mutation {
    swapCategoryPlaces(first: Int!, second: Int!): Boolean

    addNewCategory(name: String!, date: Date): Category
    addNewTask(name: String!, categoryUUID: String!): Task

    deleteCategory(UUID: String!): Boolean
    deleteTask(UUID: String!): Boolean

    changeTaskStatus(UUID: String!): Boolean
}

type Subscription {
    categoryAdded: Category
    taskAdded: Category
    categoryDeleted: String
    taskDeleted: Category
    taskStatusChanged: Category
}

type Category {
    UUID: String
    number: Int
    name: String
    tasks: [Task]
    date: Date
}

type Task {
    number: Int
    UUID: String
    name: String
    date: Date
    status: Boolean
}

type Person {
    name: String
    age: Int
}
